/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
// Add eclipse plugin
apply plugin: 'eclipse'
// Apply the application plugin to add support for building an application
apply plugin: 'application'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.10"
  }
}

apply plugin: "net.ltgt.apt"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:21.0'
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:1.3.0'
    compile 'com.amazonaws:aws-lambda-java-log4j:1.0.0'
    compile 'com.google.code.gson:gson:2.8.0'    
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'org.springframework:spring-jdbc:4.3.8.RELEASE'
    compile 'org.postgresql:postgresql:42.0.0'
    compile 'org.flywaydb:flyway-core:4.1.2'
    compile 'com.google.cloud:google-cloud-datastore:1.0.0'
    compile 'commons-fileupload:commons-fileupload:1.3.2'
    compile 'org.javadelight:delight-fileupload:0.0.3'
    compile 'javax.servlet:servlet-api:2.5'
  
    
    compileOnly "com.google.auto.value:auto-value:1.2"
    apt         "com.google.auto.value:auto-value:1.2"

    // test dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-inline:2.+'
    
}

// Define the main class for the application
mainClassName = ''

task buildZip(type: Zip) {
    from compileJava
    from processResources              
    into('lib') {
        from configurations.runtime
    }           
}

build.dependsOn buildZip

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/java"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources
